name: Build & Deploy Application

permissions:
    contents: read
    packages: write

on: 
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Build & Test Backend
        run: mvn -B -ntp clean verify

  build-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run Lint
      run: npm run lint
    - name: Test Frontend
      run: npm run test
    - name: Build Frontend
      run: npm run build

  build-push-docker-images:
    runs-on: ubuntu-latest
    needs: [build-test-frontend, build-test-backend]
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to GHCR
      uses: docker/login-action@v3 
      with: 
        registry: ghcr.io 
        username: ${{ github.actor }} 
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build & push frontend image
      uses: docker/build-push-action@v5
      with: 
        context: ./frontend
        push: true
        tags: ghcr.io/${{ github.repository }}/todo-frontend:dev

    - name: Build & push backend image
      uses: docker/build-push-action@v5
      with: 
        context: ./backend
        push: true
        tags: ghcr.io/${{ github.repository }}/todo-backend:dev

  deploy-to-render:
    runs-on: ubuntu-latest
    needs: build-push-docker-images
    steps:
      - name: Deploy backend to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true

      - name: Deploy frontend to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-success: true
